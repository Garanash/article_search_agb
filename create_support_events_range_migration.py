#!/usr/bin/env python3
"""
–ú–∏–≥—Ä–∞—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è start_date –∏ end_date –≤ support_events
"""
import sys
import os
sys.path.append(os.path.join(os.path.dirname(os.path.abspath(__file__)), 'backend'))
from sqlalchemy import create_engine, text
from app.database import SQLALCHEMY_DATABASE_URL

def add_event_range_fields():
    engine = create_engine(SQLALCHEMY_DATABASE_URL)
    try:
        print("üöÄ –ó–∞–ø—É—Å–∫ –º–∏–≥—Ä–∞—Ü–∏–∏ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è start_date –∏ end_date...")
        with engine.connect() as conn:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Å—Ç–æ–ª–±—Ü–∞ start_date
            result = conn.execute(text("PRAGMA table_info(support_events)")).fetchall()
            columns = [r[1] for r in result]
            if 'start_date' not in columns:
                print("–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—è start_date...")
                conn.execute(text("ALTER TABLE support_events ADD COLUMN start_date DATETIME"))
                print("‚úÖ –ü–æ–ª–µ start_date –¥–æ–±–∞–≤–ª–µ–Ω–æ")
            else:
                print("–ü–æ–ª–µ start_date —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            if 'end_date' not in columns:
                print("–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—è end_date...")
                conn.execute(text("ALTER TABLE support_events ADD COLUMN end_date DATETIME"))
                print("‚úÖ –ü–æ–ª–µ end_date –¥–æ–±–∞–≤–ª–µ–Ω–æ")
            else:
                print("–ü–æ–ª–µ end_date —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        print("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –º–∏–≥—Ä–∞—Ü–∏–∏: {e}")
        return False
    return True

if __name__ == "__main__":
    add_event_range_fields() 