#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤—Ö–æ–¥–∞ —Å –Ω–æ–≤—ã–º –ø–∞—Ä–æ–ª–µ–º –ø–æ—Å–ª–µ —Å–±—Ä–æ—Å–∞
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from app.database import SessionLocal
from app.models import User
from app.auth import authenticate_user, create_access_token, generate_random_password, get_password_hash, verify_password
import datetime

def test_login_with_new_password():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –≤—Ö–æ–¥ —Å –Ω–æ–≤—ã–º –ø–∞—Ä–æ–ª–µ–º –ø–æ—Å–ª–µ —Å–±—Ä–æ—Å–∞"""
    print("–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ö–æ–¥–∞ —Å –Ω–æ–≤—ã–º –ø–∞—Ä–æ–ª–µ–º –ø–æ—Å–ª–µ —Å–±—Ä–æ—Å–∞...")
    
    db = SessionLocal()
    
    try:
        # –ù–∞—Ö–æ–¥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        user = db.query(User).filter(User.username == "admin").first()
        if not user:
            print("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 'admin' –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return False
        
        print(f"\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user.username}")
        print(f"Email: {user.email}")
        print(f"–¢–µ–∫—É—â–∏–π —Ñ–ª–∞–≥ force_password_change: {user.force_password_change}")
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å (–∫–∞–∫ —ç—Ç–æ –¥–µ–ª–∞–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä)
        new_password = generate_random_password()
        print(f"\n–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å: {new_password}")
        
        # –•–µ—à–∏—Ä—É–µ–º –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å
        hashed_password = get_password_hash(new_password)
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –ø–∞—Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–∫–∞–∫ —ç—Ç–æ –¥–µ–ª–∞–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä)
        user.hashed_password = hashed_password
        user.force_password_change = True  # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è —Å–º–µ–Ω–∞ –ø–∞—Ä–æ–ª—è
        user.updated_at = datetime.datetime.now(datetime.UTC)
        
        db.commit()
        db.refresh(user)
        
        print(f"–ü–∞—Ä–æ–ª—å –æ–±–Ω–æ–≤–ª–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
        print(f"–ù–æ–≤—ã–π —Ñ–ª–∞–≥ force_password_change: {user.force_password_change}")
        
        # –°–∏–º—É–ª–∏—Ä—É–µ–º –≤—Ö–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –Ω–æ–≤—ã–º –ø–∞—Ä–æ–ª–µ–º
        print(f"\n–°–∏–º—É–ª–∏—Ä—É–µ–º –≤—Ö–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –Ω–æ–≤—ã–º –ø–∞—Ä–æ–ª–µ–º...")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é (–∫–∞–∫ —ç—Ç–æ –¥–µ–ª–∞–µ—Ç /token endpoint)
        authenticated_user = authenticate_user(db, user.username, new_password)
        if authenticated_user:
            print("‚úì –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ")
            
            # –°–æ–∑–¥–∞–µ–º —Ç–æ–∫–µ–Ω –¥–æ—Å—Ç—É–ø–∞ (–∫–∞–∫ —ç—Ç–æ –¥–µ–ª–∞–µ—Ç /token endpoint)
            access_token_expires = datetime.timedelta(minutes=60)
            access_token = create_access_token(
                data={"sub": user.username}, 
                expires_delta=access_token_expires
            )
            print(f"‚úì –¢–æ–∫–µ–Ω —Å–æ–∑–¥–∞–Ω: {access_token[:50]}...")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ–ª–∞–≥ force_password_change —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
            if authenticated_user.force_password_change:
                print("‚úì –§–ª–∞–≥ force_password_change —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω - –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–ª–∂–µ–Ω —Å–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å")
            else:
                print("‚úó –§–ª–∞–≥ force_password_change –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
                
            # –°–∏–º—É–ª–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç API –¥–ª—è –≤—Ö–æ–¥–∞
            login_response = {
                "access_token": access_token,
                "token_type": "bearer",
                "force_password_change": authenticated_user.force_password_change
            }
            print(f"‚úì –û—Ç–≤–µ—Ç API –¥–ª—è –≤—Ö–æ–¥–∞: {login_response}")
            
        else:
            print("‚úó –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –Ω–µ –ø—Ä–æ—à–ª–∞")
            return False
            
        print("\n‚úÖ –¢–µ—Å—Ç –≤—Ö–æ–¥–∞ —Å –Ω–æ–≤—ã–º –ø–∞—Ä–æ–ª–µ–º –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ!")
        print(f"üí° –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –≤–æ–π—Ç–∏ —Å –ø–∞—Ä–æ–ª–µ–º: {new_password}")
        print(f"üí° –ü–æ—Å–ª–µ –≤—Ö–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–ª–∂–µ–Ω —Å–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å")
        
        return True
        
    except Exception as e:
        print(f"‚úó –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        return False
    finally:
        db.close()

if __name__ == "__main__":
    success = test_login_with_new_password()
    if success:
        print("\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
    else:
        print("\n‚ùå –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —Å –æ—à–∏–±–∫–∞–º–∏!")
        sys.exit(1) 