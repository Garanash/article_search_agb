#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–±—Ä–æ—Å–∞ –ø–∞—Ä–æ–ª—è –∏ –≤—Ö–æ–¥–∞ –≤ —Å–∏—Å—Ç–µ–º—É
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from app.database import SessionLocal
from app.models import User
from app.auth import authenticate_user, create_access_token, generate_random_password, get_password_hash, verify_password
import datetime

def test_reset_password_and_login():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å–±—Ä–æ—Å –ø–∞—Ä–æ–ª—è –∏ –≤—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É"""
    print("–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–±—Ä–æ—Å–∞ –ø–∞—Ä–æ–ª—è –∏ –≤—Ö–æ–¥–∞ –≤ —Å–∏—Å—Ç–µ–º—É...")
    
    db = SessionLocal()
    
    try:
        # –ù–∞—Ö–æ–¥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, admin)
        user = db.query(User).filter(User.username == "admin").first()
        if not user:
            print("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 'admin' –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return False
        
        print(f"\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user.username}")
        print(f"Email: {user.email}")
        print(f"–¢–µ–∫—É—â–∏–π —Ñ–ª–∞–≥ force_password_change: {user.force_password_change}")
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å
        new_password = generate_random_password()
        print(f"\n–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å: {new_password}")
        
        # –•–µ—à–∏—Ä—É–µ–º –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å
        hashed_password = get_password_hash(new_password)
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –ø–∞—Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user.hashed_password = hashed_password
        user.force_password_change = True  # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è —Å–º–µ–Ω–∞ –ø–∞—Ä–æ–ª—è
        user.updated_at = datetime.datetime.utcnow()
        
        db.commit()
        db.refresh(user)
        
        print(f"–ü–∞—Ä–æ–ª—å –æ–±–Ω–æ–≤–ª–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
        print(f"–ù–æ–≤—ã–π —Ñ–ª–∞–≥ force_password_change: {user.force_password_change}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é —Å –Ω–æ–≤—ã–º –ø–∞—Ä–æ–ª–µ–º
        print(f"\n–¢–µ—Å—Ç–∏—Ä—É–µ–º –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é —Å –Ω–æ–≤—ã–º –ø–∞—Ä–æ–ª–µ–º...")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ö–µ—à –ø–∞—Ä–æ–ª—è
        is_valid_hash = verify_password(new_password, user.hashed_password)
        print(f"–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ö–µ—à–∞ –ø–∞—Ä–æ–ª—è: {is_valid_hash}")
        
        if not is_valid_hash:
            print("‚úó –•–µ—à –ø–∞—Ä–æ–ª—è –Ω–µ –ø—Ä–æ—Ö–æ–¥–∏—Ç –ø—Ä–æ–≤–µ—Ä–∫—É!")
            return False
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª–Ω—É—é –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é
        authenticated_user = authenticate_user(db, user.username, new_password)
        if authenticated_user:
            print("‚úì –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —Å –Ω–æ–≤—ã–º –ø–∞—Ä–æ–ª–µ–º –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ")
            
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞
            access_token_expires = datetime.timedelta(minutes=60)
            access_token = create_access_token(
                data={"sub": user.username}, 
                expires_delta=access_token_expires
            )
            print(f"‚úì –¢–æ–∫–µ–Ω —Å–æ–∑–¥–∞–Ω: {access_token[:50]}...")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–ª–∞–≥ force_password_change
            if authenticated_user.force_password_change:
                print("‚úì –§–ª–∞–≥ force_password_change —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ")
            else:
                print("‚úó –§–ª–∞–≥ force_password_change –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
                
        else:
            print("‚úó –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —Å –Ω–æ–≤—ã–º –ø–∞—Ä–æ–ª–µ–º –Ω–µ –ø—Ä–æ—à–ª–∞")
            return False
            
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –ø–∞—Ä–æ–ª–µ–º
        print(f"\n–¢–µ—Å—Ç–∏—Ä—É–µ–º –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é —Å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –ø–∞—Ä–æ–ª–µ–º...")
        wrong_auth = authenticate_user(db, user.username, "wrongpassword")
        if not wrong_auth:
            print("‚úì –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —Å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –ø–∞—Ä–æ–ª–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞")
        else:
            print("‚úó –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —Å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –ø–∞—Ä–æ–ª–µ–º –ø—Ä–æ—à–ª–∞ (—ç—Ç–æ –æ—à–∏–±–∫–∞!)")
            return False
            
        print("\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
        return True
        
    except Exception as e:
        print(f"‚úó –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        return False
    finally:
        db.close()

if __name__ == "__main__":
    success = test_reset_password_and_login()
    if success:
        print("\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
    else:
        print("\n‚ùå –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —Å –æ—à–∏–±–∫–∞–º–∏!")
        sys.exit(1) 