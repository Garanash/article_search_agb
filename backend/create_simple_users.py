#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π user –∏ admin
"""

import os
import sys
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from app.database import engine, Base, SessionLocal
from app.models import User
from app.auth import get_password_hash

def create_simple_users():
    """–°–æ–∑–¥–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π user –∏ admin —Å –ø—Ä–æ—Å—Ç—ã–º–∏ –ø–∞—Ä–æ–ª—è–º–∏"""
    print("üîê –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Å—Ç—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...")
    
    # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
    Base.metadata.create_all(bind=engine)
    
    db = SessionLocal()
    
    try:
        # –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è user
        user = db.query(User).filter(User.username == 'user').first()
        if not user:
            user = User(
                username='user',
                email='user@example.com',
                hashed_password=get_password_hash('user'),
                role='user',
                first_name='–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
                last_name='–¢–µ—Å—Ç–æ–≤—ã–π',
                department='IT',
                position='–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫'
            )
            db.add(user)
            print("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 'user' —Å–æ–∑–¥–∞–Ω —Å –ø–∞—Ä–æ–ª–µ–º 'user'")
        else:
            user.hashed_password = get_password_hash('user')
            print("‚úÖ –ü–∞—Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 'user' –æ–±–Ω–æ–≤–ª–µ–Ω –Ω–∞ 'user'")
        
        # –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è admin
        admin = db.query(User).filter(User.username == 'admin').first()
        if not admin:
            admin = User(
                username='admin',
                email='admin@example.com',
                hashed_password=get_password_hash('admin'),
                role='admin',
                first_name='–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
                last_name='–°–∏—Å—Ç–µ–º–Ω—ã–π',
                department='IT',
                position='–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä'
            )
            db.add(admin)
            print("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 'admin' —Å–æ–∑–¥–∞–Ω —Å –ø–∞—Ä–æ–ª–µ–º 'admin'")
        else:
            admin.hashed_password = get_password_hash('admin')
            print("‚úÖ –ü–∞—Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 'admin' –æ–±–Ω–æ–≤–ª–µ–Ω –Ω–∞ 'admin'")
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
        db.commit()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        users = db.query(User).all()
        print(f"\nüìä –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ —Å–∏—Å—Ç–µ–º–µ: {len(users)}")
        for u in users:
            print(f"üë§ {u.username} - {u.role} - {u.email}")
        
        print("\nüéâ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å–æ–∑–¥–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        print("üîë –õ–æ–≥–∏–Ω—ã –¥–ª—è –≤—Ö–æ–¥–∞:")
        print("   user/user")
        print("   admin/admin")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {e}")
        import traceback
        traceback.print_exc()
        db.rollback()
    finally:
        db.close()

if __name__ == "__main__":
    create_simple_users()
