#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–∞—Ä–æ–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from app.database import SessionLocal
from app.models import User
from app.auth import get_password_hash, verify_password
import datetime

def fix_admin_password(new_password="admin123"):
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –ø–∞—Ä–æ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
    print(f"üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –Ω–∞ '{new_password}'...")
    
    db = SessionLocal()
    
    try:
        # –ù–∞—Ö–æ–¥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è admin
        user = db.query(User).filter(User.username == "admin").first()
        if not user:
            print("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 'admin' –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return False
        
        print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω: {user.username}")
        print(f"üìß Email: {user.email}")
        print(f"üë§ –†–æ–ª—å: {user.role}")
        
        # –•–µ—à–∏—Ä—É–µ–º –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å
        print("üîê –•–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø–∞—Ä–æ–ª—è...")
        hashed_password = get_password_hash(new_password)
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –ø–∞—Ä–æ–ª—å
        user.hashed_password = hashed_password
        user.force_password_change = False  # –ù–µ —Ç—Ä–µ–±—É–µ–º —Å–º–µ–Ω—É –ø–∞—Ä–æ–ª—è
        user.updated_at = datetime.datetime.utcnow()
        
        db.commit()
        db.refresh(user)
        
        print("‚úÖ –ü–∞—Ä–æ–ª—å –æ–±–Ω–æ–≤–ª–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–∞—Ä–æ–ª—å —Ä–∞–±–æ—Ç–∞–µ—Ç
        print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–æ–≤–æ–≥–æ –ø–∞—Ä–æ–ª—è...")
        if verify_password(new_password, user.hashed_password):
            print("‚úÖ –ü–∞—Ä–æ–ª—å —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
            return True
        else:
            print("‚ùå –ü–∞—Ä–æ–ª—å –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø–∞—Ä–æ–ª—è: {e}")
        db.rollback()
        return False
    finally:
        db.close()

def test_login_after_fix():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –≤—Ö–æ–¥ –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è"""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ö–æ–¥–∞ –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è...")
    
    import requests
    
    login_data = {
        "username": "admin",
        "password": "admin123"
    }
    
    try:
        response = requests.post(
            "http://localhost:8000/api/auth/login",
            data=login_data,
            timeout=10
        )
        
        print(f"   –°—Ç–∞—Ç—É—Å –≤—Ö–æ–¥–∞: {response.status_code}")
        
        if response.status_code == 200:
            data = response.json()
            token = data.get('access_token')
            if token:
                print("   ‚úÖ –í—Ö–æ–¥ —É—Å–ø–µ—à–µ–Ω!")
                print(f"   üîë –¢–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω: {token[:50]}...")
                return True
            else:
                print("   ‚ùå –¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –æ—Ç–≤–µ—Ç–µ")
                return False
        else:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞: {response.text}")
            return False
            
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

if __name__ == "__main__":
    print("üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞")
    print("=" * 50)
    
    # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø–∞—Ä–æ–ª—å
    if fix_admin_password():
        print("\n‚úÖ –ü–∞—Ä–æ–ª—å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—Ö–æ–¥
        if test_login_after_fix():
            print("\nüéâ –í—Å–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ! –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –º–æ–∂–µ—Ç –≤–æ–π—Ç–∏ —Å –ø–∞—Ä–æ–ª–µ–º 'admin123'")
        else:
            print("\n‚ö†Ô∏è –ü–∞—Ä–æ–ª—å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω, –Ω–æ –≤—Ö–æ–¥ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–µ—Ä–≤–µ—Ä.")
    else:
        print("\nüí• –ù–µ —É–¥–∞–ª–æ—Å—å –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø–∞—Ä–æ–ª—å") 