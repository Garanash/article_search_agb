#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —á–∞—Ç–∞ —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π
"""

import requests
import json
import sys
import os

def test_login():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –≤—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É"""
    print("üîê –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ö–æ–¥–∞ –≤ —Å–∏—Å—Ç–µ–º—É...")
    
    login_data = {
        "username": "admin",
        "password": "admin123"
    }
    
    try:
        response = requests.post(
            "http://localhost:8000/api/auth/login",
            data=login_data,
            timeout=10
        )
        
        print(f"   –°—Ç–∞—Ç—É—Å –≤—Ö–æ–¥–∞: {response.status_code}")
        
        if response.status_code == 200:
            data = response.json()
            token = data.get('access_token')
            if token:
                print("   ‚úÖ –í—Ö–æ–¥ —É—Å–ø–µ—à–µ–Ω")
                print(f"   üîë –¢–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω: {token[:50]}...")
                return token
            else:
                print("   ‚ùå –¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –æ—Ç–≤–µ—Ç–µ")
                return None
        else:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞: {response.text}")
            return None
            
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
        return None

def test_chat_with_token(token):
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —á–∞—Ç —Å —Ç–æ–∫–µ–Ω–æ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏"""
    print("\nüí¨ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —á–∞—Ç–∞ —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π...")
    
    headers = {
        "Authorization": f"Bearer {token}",
        "Content-Type": "application/json"
    }
    
    payload = {
        "model": "anthropic/claude-3-haiku",
        "messages": [
            {"role": "user", "content": "–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ."}
        ],
        "temperature": 0.7,
        "max_tokens": 100,
        "extra_headers": {"X-Title": "Test"}
    }
    
    try:
        response = requests.post(
            "http://localhost:8000/api/chat/completions",
            headers=headers,
            json=payload,
            timeout=60
        )
        
        print(f"   –°—Ç–∞—Ç—É—Å —á–∞—Ç–∞: {response.status_code}")
        
        if response.status_code == 200:
            result = response.json()
            print("   ‚úÖ –ß–∞—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç")
            if 'choices' in result and len(result['choices']) > 0:
                content = result['choices'][0]['message']['content']
                print(f"   ü§ñ –û—Ç–≤–µ—Ç: {content[:100]}...")
            return True
        else:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ —á–∞—Ç–∞: {response.text}")
            return False
            
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def test_balance_with_token(token):
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–ª—É—á–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ —Å —Ç–æ–∫–µ–Ω–æ–º"""
    print("\nüí∞ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π...")
    
    headers = {
        "Authorization": f"Bearer {token}",
        "Content-Type": "application/json"
    }
    
    try:
        response = requests.get(
            "http://localhost:8000/api/chat/balance",
            headers=headers,
            timeout=30
        )
        
        print(f"   –°—Ç–∞—Ç—É—Å –±–∞–ª–∞–Ω—Å–∞: {response.status_code}")
        
        if response.status_code == 200:
            balance = response.json()
            print("   ‚úÖ –ë–∞–ª–∞–Ω—Å –ø–æ–ª—É—á–µ–Ω")
            print(f"   üí∞ –ë–∞–ª–∞–Ω—Å: {balance}")
            return True
        else:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –±–∞–ª–∞–Ω—Å–∞: {response.text}")
            return False
            
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def main():
    print("üß™ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —á–∞—Ç–∞ —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π")
    print("=" * 50)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—Ö–æ–¥
    token = test_login()
    if not token:
        print("\nüí• –ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É")
        return
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —á–∞—Ç
    if not test_chat_with_token(token):
        print("\nüí• –ü—Ä–æ–±–ª–µ–º–∞ —Å —á–∞—Ç–æ–º")
        return
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –±–∞–ª–∞–Ω—Å
    test_balance_with_token(token)
    
    print("\n" + "=" * 50)
    print("‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
    print("üí° –ï—Å–ª–∏ —á–∞—Ç –≤ –±—Ä–∞—É–∑–µ—Ä–µ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç:")
    print("   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–æ–∫–µ–Ω –≤ localStorage")
    print("   - –û—á–∏—Å—Ç–∏—Ç–µ –∫—ç—à –±—Ä–∞—É–∑–µ—Ä–∞")
    print("   - –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–æ–π—Ç–∏ –∑–∞–Ω–æ–≤–æ")

if __name__ == "__main__":
    main() 